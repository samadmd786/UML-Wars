/**
 * @file ItemPenTest.cpp
 * @author Josh Erno
 */

#include <pch.h>
#include "gtest/gtest.h"
#include <ItemPen.h>
#include <UMLWars.h>

/// constant for pi
const double pi = 3.1415;

/// constant for radial offset from Harold
const double offsetRadial = 61.3;

/// constant for angular offset from Harold
const double offsetAngular = -1.078;

/**
* Mock class for testing the class ItemPen
*/
class ItemPenMock : public ItemPen
{
public:
    ItemPenMock(UMLWars* umlWars) : ItemPen(umlWars) {}

    void Draw(wxGraphicsContext* graphics) override {}
};

TEST(ItemPenTest, Construct)
{
    UMLWars umlWars;
    ItemPenMock pen(&umlWars);
}

TEST(ItemPenTest, Reset)
{
    UMLWars umlWars;
    ItemPenMock pen(&umlWars);

    ASSERT_NEAR(0, pen.GetX(), 0.0001);
    ASSERT_NEAR(0, pen.GetY(), 0.0001);

    pen.SetX(100.0);
    pen.SetY(100.0);

    ASSERT_NEAR(100.0, pen.GetX(), 0.0001);
    ASSERT_NEAR(100.0, pen.GetY(), 0.0001);


//    pen.Reset();
//
//    ASSERT_NEAR(29, pen.GetX(), 0.0001);
//    ASSERT_NEAR(846, pen.GetY(), 0.0001);

    pen.Launch();

    ASSERT_TRUE(pen.GetLaunch());
    ASSERT_NEAR(20.0, pen.GetSpeed(), 0.0001);

}















